Common steps for pre-processing a new dataset are:
1.Figure out the dimensions and shapes of the problem (m_train, m_test, num_px, ...)
2.Reshape the datasets such that each example is now a vector of size (num_px * num_px * 3, 1)
3."Standardize" the data

The main steps for building a Neural Network are:

1.Define the model structure (such as number of input features)
2.Initialize the model's parameters
3.Loop:
  Calculate current loss (forward propagation)
  Calculate current gradient (backward propagation)
  Update parameters (gradient descent)
  
1.Initialize (w,b)
2.Optimize the loss iteratively to learn parameters (w,b):
  computing the cost and its gradient
  updating the parameters using gradient descent
3.Use the learned (w,b) to predict the labels for a given set of examples

Interpretation:
1. Different learning rates give different costs and thus different predictions results.
2. If the learning rate is too large (0.01), the cost may oscillate up and down. It may even diverge (though in this example, using 0.01 still eventually ends up at a good value for the cost).
A lower cost doesn't mean a better model. You have to check if there is possibly overfitting. It happens when the training accuracy is a lot higher than the test accuracy.
3. In deep learning, we usually recommend that you:
    Choose the learning rate that better minimizes the cost function.
    If your model overfits, use other techniques to reduce overfitting. (We'll talk about this in later videos.)
